---
swagger: "2.0"
info:
  description: "A API about the results of the feedbacks"
  version: "1.0.0"
  title: "Feedbacks results"
  termsOfService: "http://helloreverb.com/terms/"
  contact:
    name: "Swagger API team"
    url: "http://swagger.io"
    email: "foo@example.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "localhost:8080"
basePath: "/api"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /feedbacksInformation:
    get:
      description: "Returns all feedbacks  from the system that the user has access\
        \ to"
      operationId: "findFeedbacks"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "limit"
        in: "query"
        description: "maximum number of feedbacks to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "feedbacks response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feedbackInformation"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new feedback.  Duplicates are allowed"
      operationId: "addFeedback"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "feedback"
        description: "Feedback to add"
        required: true
        schema:
          $ref: "#/definitions/feedbackInformation"
      responses:
        200:
          description: "feedback response"
          schema:
            $ref: "#/definitions/feedbackInformation"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /feedbacksInformation/{idFeedback}:
    get:
      description: "Returns the information of a feedback based on a single ID"
      operationId: "findFeedbackById"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "ID of feedback to fetch"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "pet response"
          schema:
            $ref: "#/definitions/feedbackInformation"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single feedback based on the ID supplied"
      operationId: "deleteFeedback"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "ID of feedback to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "feedback deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /feedbacksResults:
    get:
      description: "Returns all feedbacks results from the system that the user has\
        \ access to"
      operationId: "findFeedbacksResults"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "feedbacks results response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feedbackResult"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new feedback result for a student.  Duplicates are allowed"
      operationId: "addFeedbackResult"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "feedbackResult"
        description: "Feedback result to add"
        required: true
        schema:
          $ref: "#/definitions/feedbackResult"
      responses:
        200:
          description: "feedback response"
          schema:
            $ref: "#/definitions/feedbackResult"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /feedbacksResults/{idFeedback}:
    get:
      description: "Returns the result of a feedback based on a id"
      operationId: "findFeedbackResultByIdFeedback"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "id of feedback to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "feedback result response"
          schema:
            $ref: "#/definitions/feedbackResult"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  

  /findStudentsPrepared/{idFeedback}:
    get:
      description: "Returns all feedbacks results with preparationEnd equal to 'si'"
      operationId: "findStudentsPrepared"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "id of feedback to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "feedbacks response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feedbackResult"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"  


  /findStudentsPreparedSameShift/{idFeedback}/{shift}:
    get:
      description: "Returns all feedbacks results with preparationEnd equal to 'si'"
      operationId: "findStudentsPreparedSameShift"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "id of feedback to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "shift"
        in: "path"
        description: "shift of feedback to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "feedbacks response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feedbackResult"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default" 



  /feedbacksResults/{idFeedback}/{student}:
    get:
      description: "Returns the result of the feedback id_feedback for the student"
      operationId: "findFeedbackByIdFeedbackAndStudent"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "ID of feedback to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "student"
        in: "path"
        description: "Name of student to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/feedbackResult"
        400:
          description: "Invalid idFeedback supplied"
        404:
          description: "Feedback and student not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    put:
      summary: "Updated feedback result for a student and feedback"
      operationId: "updateFeedbackByIdFeedbackAndStudent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "idFeedback"
        in: "path"
        description: "ID of feedback to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "student"
        in: "path"
        description: "Name of student to fetch"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated feedback object"
        required: false
        schema:
          $ref: "#/definitions/feedbackResult"
      responses:
        400:
          description: "Invalid feedback supplied"
        404:
          description: "Student not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  feedbackInformation:
    type: "object"
    properties:
      idFeedback:
        type: "integer"
        format: "int32"
      punctuation:
        type: "number"
        format: "double"
      preparation:
        type: "array"
        items:
          $ref: "#/definitions/preparation"
      checks:
        type: "array"
        items:
          $ref: "#/definitions/check"
  preparation:
    type: "object"
    properties:
      idPreparation:
        type: "integer"
        format: "int32"
      description:
        type: "string"
  check:
    type: "object"
    properties:
      idCheck:
        type: "integer"
        format: "int32"
      typeCheck:
        type: "string"
      description:
        type: "string"
  feedbackResult:
    type: "object"
    properties:
      subject:
        type: "string"
      edition:
        type: "string"
      waiting:
        type: "string"
      idFeedback:
        type: "integer"
        format: "int32"
      student:
        type: "string"
      email:
        type: "string"
      reviewer:
        type: "string"
      group:
        type: "integer"
        format: "int32"
      shift:
        type: "string"
      preparationEnd:
        type: "string"
      result:
        type: "string"
      score:
        type: "number"
        format: "double"
      arrayCheckResults:
        type: "array"
        items:
          $ref: "#/definitions/checkResult"
  checkResult:
    type: "object"
    properties:
      idCheck:
        type: "integer"
        format: "int32"
      result:
        type: "string"
      comments:
        type: "string"
      
